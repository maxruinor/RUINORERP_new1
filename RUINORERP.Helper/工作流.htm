<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>工作流</title>
<meta name="GENERATOR" content="WinCHM">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<style>
html,body { 
	/* Default Font */
	font-family: Arial, Helvetica, sans-serif;
	font-size: 11pt;
}
</style>

</head>

<body>
<div style="background-color: #f0f0f0; padding: 10px; margin-bottom: 20px; border: 1px solid #ddd; border-radius: 5px;">
    <strong>导航链接：</strong>
    <a href="生产管理.htm" style="margin-right: 15px;">生产管理</a>
    <a href="进销存管理.htm" style="margin-right: 15px;">进销存管理</a>
    <a href="售后管理.htm" style="margin-right: 15px;">售后管理</a>
    <a href="客户关系管理.htm" style="margin-right: 15px;">客户关系</a>
    <a href="财务管理.htm" style="margin-right: 15px;">财务管理</a>
    <a href="行政管理.htm" style="margin-right: 15px;">行政管理</a>
    <a href="报表管理.htm" style="margin-right: 15px;">报表管理</a>
    <a href="电商运营.htm" style="margin-right: 15px;">电商运营</a>
    <a href="基础资料管理.htm" style="margin-right: 15px;">基础资料</a>
    <a href="系统设置.htm" style="margin-right: 15px;">系统设置</a>
    <a href="通用功能.htm" style="margin-right: 15px;">通用功能</a>
    <a href="审核反审核结案业务流程.htm" style="margin-right: 15px;">审核流程</a>
</div>
    <P>数据推过来后。保存到一些集合中。定时推送。也可以总表格一样的显示。各种推送数据。</P>
<P>&nbsp;</P>
<P>已经实现的提示窗口，可以统计信息，可以用图标区别不同的类型。</P>
<P>&nbsp;</P>
<P><A 
href="https://blog.csdn.net/Mr_TianSDQ/article/details/129125262">https://blog.csdn.net/Mr_TianSDQ/article/details/129125262</A>&nbsp;&nbsp; 
推送实例</P>
<P>&nbsp;</P>
<P><A 
href="https://www.jianshu.com/p/331bbfb53fa2">https://www.jianshu.com/p/331bbfb53fa2</A>&nbsp;外部输入的另一种方法</P>
<P>&nbsp;</P>
<P>1）服务器保存的队列&nbsp; 单号和流程号不科学</P>
<P>2）两个流程数据太复杂</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P><A 
href="https://blog.csdn.net/kuyz1/article/details/111317036">https://blog.csdn.net/kuyz1/article/details/111317036</A>&nbsp;&nbsp; 
工作流的一分析。有用</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>客户端 内存模式的工作流 循环提醒 定时提醒等</P>
<P>好文章集合</P>
<P><A 
href="https://www.dongchuanmin.com/winform/">https://www.dongchuanmin.com/winform/</A></P>
<P>&nbsp;</P>
<P><A 
href="https://blog.csdn.net/u014364227/article/details/129351332">https://blog.csdn.net/u014364227/article/details/129351332</A></P>
<P>审批 流程设计</P>
<P>&nbsp;</P>
<P>人工审核 可以参考 有关&nbsp;UserTask</P>
<P><A 
href="https://blog.51cto.com/u_15943685/6026686">https://blog.51cto.com/u_15943685/6026686</A></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>工作流配置的一些细节 带日志</P>
<P><A 
href="https://www.cnblogs.com/keep-study-to-die/p/12001408.html">https://www.cnblogs.com/keep-study-to-die/p/12001408.html</A></P>
<P>&nbsp;</P>
<P><FONT color=#ff0000>很完整的一教程</FONT></P>
<P><A 
href="https://www.cnblogs.com/whuanle/p/11332892.html">https://www.cnblogs.com/whuanle/p/11332892.html</A></P>
<P>&nbsp;</P>
<P>工作流的一些分析。，一些关键店。值得看！！！！！！！！！！！！！<FONT color=#ff0000>一定要看完</FONT></P>
<P><A 
href="https://www.xin3721.com/ArticlecSharp/csharpvbnet_41710.html">https://www.xin3721.com/ArticlecSharp/csharpvbnet_41710.html</A></P>
<P><A 
href="https://www.cnblogs.com/wl-blog/p/16500455.html">https://www.cnblogs.com/wl-blog/p/16500455.html</A></P>
<P>&nbsp;</P>
<P>单独实例测试成功后。</P>
<P>再修改一下服务器这个。再次测试。上面的那个红色文章 。多看一下。比较完整。</P>
<P> 持久化测试，中断后恢复流程数据用</P>
<P> 查询状态</P>
<P><STRONG><FONT color=#444444 size=3 face=Tahoma>自定义注册StepBody 像这里一个做一个接口</FONT></STRONG></P>
<P><A 
href="https://www.cnblogs.com/lispring/p/13738600.html">https://www.cnblogs.com/lispring/p/13738600.html</A></P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P>&nbsp;</P>
<P> 2.5 Saga支持 <SPAN 
style="WIDOWS: 2; TEXT-TRANSFORM: none; BACKGROUND-COLOR: rgb(255,255,255); FONT-STYLE: normal; TEXT-INDENT: 0px; LETTER-SPACING: normal; DISPLAY: inline !important; FONT-FAMILY: 'PingFang SC', 'Microsoft YaHei', 'Helvetica Neue', Helvetica, Arial, sans-serif; WHITE-SPACE: normal; ORPHANS: 2; FLOAT: none; COLOR: rgb(51,51,51); FONT-SIZE: 14px; FONT-WEIGHT: 400; WORD-SPACING: 0px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial">Saga 
可以用来处理事务，进行重试或回滚等操作。后面说明。 <A 
href="https://www.cnblogs.com/whuanle/p/11332892.html#3input--output">https://www.cnblogs.com/whuanle/p/11332892.html#3input--output</A></SPAN>  
<BR>　　了解分布式事务方案的童鞋应该都知道Saga，在Workflow-Core中也有支持，这是一个十分有用的功能：</P>
<P> 　　（1）比如：在创建一个客户信息之后，将其推送到Salesforce和ERP，如果推送过程中发生了错误，那么就通过重试进行补偿，并且重试有时间间隔<BR><A 
href="https://blog.csdn.net/Mr_TianSDQ/article/details/129125262">https://blog.csdn.net/Mr_TianSDQ/article/details/129125262</A> </P></body>
</html>
