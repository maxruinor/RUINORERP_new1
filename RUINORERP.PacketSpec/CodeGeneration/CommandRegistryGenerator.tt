<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using System.Collections.Generic;
using RUINORERP.PacketSpec.Commands;

namespace RUINORERP.PacketSpec.CodeGeneration
{
    /// <summary>
    /// 自动生成的命令注册表
    /// 由T4模板在编译时生成
    /// </summary>
    public static class GeneratedCommandRegistry
    {
        /// <summary>
        /// 命令标识符映射表
        /// </summary>
        public static readonly IReadOnlyDictionary<uint, Type> CommandIdentifiers = new Dictionary<uint, Type>
        {
<# 
    // 这里会在实际的源代码生成器中通过反射扫描所有标记了Command特性的类
    // 示例数据:
#>
            { 0x0304, typeof(SendPopupMessageCommand) },
            // 更多命令类型会在这里自动生成
        };

        /// <summary>
        /// 命令处理器映射表
        /// </summary>
        public static readonly IReadOnlyDictionary<uint, Type> CommandHandlerTypes = new Dictionary<uint, Type>
        {
<# 
    // 这里会在实际的源代码生成器中通过反射扫描所有标记了CommandHandler特性的类
    // 示例数据:
#>
            { 0x0304, typeof(MessageCommandHandlerV2) },
            // 更多命令处理器会在这里自动生成
        };

        /// <summary>
        /// 获取命令类型的描述信息
        /// </summary>
        /// <param name="commandId">命令ID</param>
        /// <returns>命令描述</returns>
        public static string GetCommandDescription(uint commandId)
        {
            return commandId switch
            {
                0x0304 => "发送弹窗消息",
                // 更多命令描述会在这里自动生成
                _ => "未知命令"
            };
        }
    }
}