
逻辑一致性：无论现金或账期，统一生成应收单，简化业务规则。


期初账单表
收款单（主子）
付款单（主子）

预收预付

先配置科目与凭证规则

销售出库-自动生成凭证（分录）--这里是财务性的。
销售出库-如账期则生成，应收。收到后生成收款。 这里是业务性的
业务单据（如销售出库单、付款单）同时生成会计凭证和应收/应付表，两者是并行

最终：
凭证汇总生成总汇表。还可以生成资产负债表，利润表等。

请优先实现业务数据表（如应收应付、收付款），暂缓会计凭证和复杂的管理分析报表，但需在设计和数据架构上预留扩展性
请用进阶版（复杂业务支持） 分开设计，需支持复杂核销、多币种、退款等场景，
业务数据表（应收/应付、收付款、预收/预付）的详细设计方案，包含数据库表结构、C#核心类实现及关键逻辑说明。
基于已完成的销售和采购模块，采用主子表结构和松耦合设计，确保可扩展性
设计使用的是c# 和 MSSQL。首先 确定好 生成哪表。再字段。注释中文。
再讲数据流向逻辑。各中 状态如 是否结清，是否 冲销，是审核 等等。


tb_BankAccount   这个表在 供应商和员工表被引用。暂时没有使用到。


为了规范：
所有付款行为最后都是通过付款申请单来完成
------
如果凭证尚未过账或关联到其他业务流程，直接删除原凭证并重新生成可能是最简便的方法。如果凭证已经过账或关联到其他业务流程，建议使用对冲核销或反审核修改，以确保数据的完整性和连续性。


操作流程
销售出库：根据销售出库单生成会计凭证，记录销售收入。
付款处理：如果是即时付款，则生成付款表记录实际收款。
账期处理：如果是账期，则生成应收表记录应收账款。
收款处理：账期届满收到货款后，记录到收款表，并生成相应的会计凭证。


冲销处理：
冲销是指将预收、预付、应收、应付等账款进行结算和核销的过程。以下是具体的冲销操作：
预收账款冲销
当客户预先支付款项（预收账款），在发货时将预收账款转为销售收入。
会计分录：
借：预收账款
贷：主营业务收入
操作步骤：
在销售出库时，根据预收账款金额更新会计凭证。
将预收账款表中的记录标记为“已结算”。
应收账款冲销
当收到客户款项时，将应收账款转为实际收款。
会计分录：
借：银行存款
贷：应收账款
操作步骤：
在收款时，根据收款金额更新会计凭证。
将应收账款表中的记录标记为“已收款”。
预付账款冲销
当企业预先支付款项（预付账款），在收到货物或服务时将预付账款转为实际成本。
会计分录：
借：相关成本科目
贷：预付账款
操作步骤：
在收到货物或服务时，根据预付账款金额更新会计凭证。
将预付账款表中的记录标记为“已结算”。
应付账款冲销
当支付供应商款项时，将应付账款转为实际付款。
会计分录：
借：应付账款
贷：银行存款
操作步骤：
在付款时，根据付款金额更新会计凭证。
将应付账款表中的记录标记为“已付款”。
sql
CREATE TABLE `arap_master` (
  `id` BIGINT PRIMARY KEY AUTO_INCREMENT COMMENT '主键',
  `bill_no` VARCHAR(50) NOT NULL COMMENT '单据编号（规则：AR-年月日-0001）',
  `bill_type` TINYINT NOT NULL COMMENT '类型（1=应收，2=应付，3=预收，4=预付）',
  `bill_date` DATETIME NOT NULL COMMENT '单据日期',
  `customer_id` BIGINT COMMENT '客户ID（应收/预收时非空）',
  `supplier_id` BIGINT COMMENT '供应商ID（应付/预付时非空）',
  `total_amount` DECIMAL(18,2) NOT NULL COMMENT '总金额',
  `status` TINYINT NOT NULL DEFAULT 0 COMMENT '状态（0=草稿，1=已审核，2=已核销）',
  `source_bill_type` VARCHAR(20) COMMENT '来源单据类型（如销售订单、采购订单）',
  `source_bill_id` BIGINT COMMENT '来源单据ID',
  `created_by` BIGINT NOT NULL COMMENT '创建人',
  `created_time` DATETIME NOT NULL COMMENT '创建时间',
  `audited_by` BIGINT COMMENT '审核人',
  `audited_time` DATETIME COMMENT '审核时间',

      ARPId BIGINT PRIMARY KEY IDENTITY,
    ARPType TINYINT NOT NULL,           -- 1=应收,2=应付,3=预收,4=预付
    BizOrderId BIGINT NOT NULL,         -- 关联业务单号（销售/采购订单ID）
    BizOrderType TINYINT NOT NULL,      -- 1=销售订单,2=采购订单,3=其他...
    CurrencyCode VARCHAR(10) NOT NULL,  -- 币种
    OriginalAmount DECIMAL(18,4) NOT NULL, -- 原币金额
    ExchangeRate DECIMAL(18,6) NOT NULL, -- 汇率
    LocalAmount DECIMAL(18,2) NOT NULL, -- 本币金额
    RemainAmount DECIMAL(18,2) NOT NULL,-- 剩余待核销金额（动态计算）
    Status TINYINT NOT NULL,            -- 0=待审核,1=已生效,2=已关闭,3=已冲销
    IsFullySettled BIT NOT NULL DEFAULT 0, -- 是否完全结清
    DueDate DATETIME,                   -- 到期日（账期专用）
    CreatedTime DATETIME DEFAULT GETDATE()


  UNIQUE KEY `uk_bill_no` (`bill_no`)
) COMMENT '应收应付主表';
2. 应收应付明细表（子表）
sql
CREATE TABLE `arap_detail` (
  `id` BIGINT PRIMARY KEY AUTO_INCREMENT,
  `master_id` BIGINT NOT NULL COMMENT '主表ID',
  `product_id` BIGINT COMMENT '产品ID（可选，费用类可能无产品）',
  `quantity` DECIMAL(12,4) COMMENT '数量',
  `unit_price` DECIMAL(18,2) COMMENT '单价',
  `amount` DECIMAL(18,2) NOT NULL COMMENT '明细金额',
  `remark` VARCHAR(200) COMMENT '备注',
  FOREIGN KEY (`master_id`) REFERENCES `arap_master`(`id`)
) COMMENT '应收应付明细表';
3. 收付款主表（记录实际收付款）
sql
CREATE TABLE `payment_master` (
  `id` BIGINT PRIMARY KEY AUTO_INCREMENT,
  `bill_no` VARCHAR(50) NOT NULL COMMENT '收付款单号（PY-年月日-0001）',
  `payment_type` TINYINT NOT NULL COMMENT '类型（1=收款，2=付款）',
  `payer_id` BIGINT NOT NULL COMMENT '付款方ID（客户/供应商/个人）',
  `payer_type` TINYINT NOT NULL COMMENT '付款方类型（1=客户，2=供应商，3=员工）',
  `total_amount` DECIMAL(18,2) NOT NULL COMMENT '收付款总额',
  `payment_date` DATETIME NOT NULL COMMENT '收付款日期',
  `status` TINYINT NOT NULL DEFAULT 0 COMMENT '状态（0=草稿，1=已审核）',
  `created_by` BIGINT NOT NULL,
  `created_time` DATETIME NOT NULL,
  `audited_by` BIGINT,
  `audited_time` DATETIME,
  UNIQUE KEY `uk_payment_bill_no` (`bill_no`)
) COMMENT '收付款主表';
 
-- 收款付款记录表 收付款表（记录所有资金流动）
CREATE TABLE PaymentRecord (
    PaymentId INT PRIMARY KEY IDENTITY,
    ARPId INT NOT NULL,             -- 关联应收应付ID
       ARPId BIGINT NULL,                  -- 关联应收应付ID（可空，如预收预付）

    Amount DECIMAL(18,2) NOT NULL,  -- 本次收付金额
    PaymentDate DATETIME NOT NULL,   -- 收付日期
    PaymentMethod TINYINT,          -- 1=现金,2=银行转账,3=支票
    ReferenceNumber VARCHAR(50),    -- 参考号（如银行流水号）
    PaymentType TINYINT NOT NULL,       -- 1=收款（应收）,2=付款（应付）
    IsPrepayment BIT DEFAULT 0      -- 是否为预付款
    PaymentId BIGINT PRIMARY KEY IDENTITY,
    PaymentType TINYINT NOT NULL,       -- 1=收款,2=付款,3=退款
 
    BizOrderId BIGINT NULL,             -- 关联业务单号（如退款关联原订单）
    CurrencyCode VARCHAR(10) NOT NULL,
    OriginalAmount DECIMAL(18,4) NOT NULL,
    ExchangeRate DECIMAL(18,6) NOT NULL,
    LocalAmount DECIMAL(18,2) NOT NULL,

    PaymentMethod TINYINT NOT NULL,     -- 1=现金,2=银行转账...
  
    ReferenceNo VARCHAR(50) NULL,       -- 交易参考号（如银行流水号）
    Status TINYINT NOT NULL,            -- 0=草稿,1=已审核,2=已冲销

    CreatedBy BIGINT NOT NULL,
    CreatedTime DATETIME DEFAULT GETDATE()
);

 CREATE TABLE `settlement_record` (
  `id` BIGINT PRIMARY KEY AUTO_INCREMENT,
  `arap_id` BIGINT NOT NULL COMMENT '应收应付单ID',
  `payment_id` BIGINT NOT NULL COMMENT '收付款单ID',
  `settle_amount` DECIMAL(18,2) NOT NULL COMMENT '核销金额',
  `settle_time` DATETIME NOT NULL COMMENT '核销时间',
  `settled_by` BIGINT NOT NULL COMMENT '核销人',
  FOREIGN KEY (`arap_id`) REFERENCES `arap_master`(`id`),
  FOREIGN KEY (`payment_id`) REFERENCES `payment_master`(`id`)
   IsReversed BIT DEFAULT 0            -- 是否冲销（退款时标记）
) COMMENT '核销记录表'
sql
复制
CREATE TABLE dbo.tb_FM_Invoice (
    InvoiceId BIGINT PRIMARY KEY IDENTITY,
    ARPId BIGINT NOT NULL,              -- 关联应收/应付单
    InvoiceNumber VARCHAR(50) NOT NULL, -- 发票号
    InvoiceDate DATETIME NOT NULL,
    InvoiceAmount DECIMAL(18,2) NOT NULL, -- 开票金额（可大于或小于应收）
    TaxAmount DECIMAL(18,2) NOT NULL,   -- 税额
    Status TINYINT NOT NULL,            -- 0=待开票,1=已开票,2=已核销
    OverrideReason NVARCHAR(200) NULL,  -- 超额/差额原因
    CreatedTime DATETIME DEFAULT GETDATE()
);
 ---
 1. 预付场景（预付款给供应商）
步骤	业务数据生成	财务数据生成	审核步骤	核销状态更新
1. 创建预付单	- 手动录入：采购部门创建预付单（预付金额、供应商、币种）
- 自动生成：合同约定预付款时自动生成预付单	生成 AdvanceMaster（预付主表）和 AdvanceDetail（预付明细表）	预付单状态：草稿 → 采购经理审核 → 状态变为已审核	预付单 RemainAmount = 预付总金额
2. 生成付款单	- 自动生成：预付单审核后自动生成付款申请单	生成 PaymentMaster（付款主表）和 PaymentDetail（付款明细表，关联资金账户）	付款单状态：草稿 → 财务确认付款 → 状态变为已支付	预付单 RemainAmount 不变，等待后续核销
3. 采购入库核销预付	- 自动生成：采购入库单审核时生成应付单（ARAPMaster）	应付单关联预付单，生成 SettlementRecord（核销记录）	应付单状态：草稿 → 财务审核 → 状态变为已审核	预付单 RemainAmount 减少核销金额
应付单 SettlementStatus 更新为部分结清/已结清